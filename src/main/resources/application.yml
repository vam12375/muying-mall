server:
  port: 8080
  servlet:
    context-path: /api
  # 添加Tomcat配置，允许请求路径中包含特殊字符
  tomcat:
    relaxed-query-chars: '[,],{,},|'
    relaxed-path-chars: '[,],{,},|'
    max-http-form-post-size: 20MB

spring:
  application:
    name: muying-mall
  
  # 引入私有配置文件
  profiles:
    include: private
  
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/muying_mall?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: root
    # 密码已移至application-private.yml
  
  # Redis配置  
  data:
    redis:
      host: localhost
      port: 6379
      # 密码已移至application-private.yml
      database: 0
      # Redis连接池配置
      lettuce:
        pool:
          max-active: 16       # 最大连接数，增加以支持高并发
          max-idle: 8          # 最大空闲连接数
          min-idle: 4          # 最小空闲连接数，提高以保持足够的可用连接
          max-wait: 1000ms     # 连接池最大阻塞等待时间
          time-between-eviction-runs: 60000ms # 空闲连接检测周期
      timeout: 3000ms          # 连接超时时间
      # Redis客户端配置
      client-name: muying-mall # 客户端名称，便于监控识别
      connect-timeout: 3000ms  # 连接超时时间
      # Redis高级配置
      client-type: lettuce     # 使用lettuce客户端
  
  # Session配置
  session:
    store-type: redis
    timeout: 604800s  # 7天 (7*24*60*60=604800秒)
    redis:
      namespace: muying:session
      flush-mode: on_save  # 确保会话变更立即写入Redis
      
  # RabbitMQ配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 15000
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3
        max-interval: 10000
        multiplier: 2
    listener:
      simple:
        acknowledge-mode: manual
        concurrency: 5
        max-concurrency: 10
        prefetch: 1
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2
      
  # Elasticsearch配置
  elasticsearch:
    uris: localhost:9200 # Elasticsearch访问地址
    connection-timeout: 5s # 连接超时时间
    socket-timeout: 30s # 套接字超时时间
    username: # 如果有认证信息，可在此处配置
    password: # 如果有认证信息，可在此处配置

# 健康检查配置
management:
  health:
    elasticsearch:
      enabled: false # 禁用Elasticsearch健康检查，避免启动失败
    rabbitmq:
      enabled: true # 启用RabbitMQ健康检查
  endpoint:
    health:
      show-details: always # 显示详细健康信息
      show-components: always # 显示所有组件健康状态
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,rabbitmq # 暴露健康检查和监控端点
  metrics:
    export:
      prometheus:
        enabled: true # 启用Prometheus指标导出
    tags:
      application: muying-mall # 添加应用标签
      
# Redis自定义配置
redis:
  # 缓存淘汰策略配置
  config:
    # 设置maxmemory-policy为volatile-lru，只淘汰设置了过期时间的key
    maxmemory-policy: volatile-lru
    # Redis内存限制，建议设置为可用内存的75%
    maxmemory: 1gb
    # 键空间通知配置，启用过期和驱逐事件通知
    notify-keyspace-events: Ex
  # 缓存统计配置
  stats:
    # 是否启用缓存统计
    enabled: true
    # 统计采样率（1-100）
    sample-rate: 10
  # 高级特性配置
  features:
    # 是否启用批量操作Pipeline
    pipeline-enabled: true
    # 是否启用Lua脚本缓存
    script-cache-enabled: true
    # 是否启用分布式锁
    lock-enabled: true

# MyBatis-Plus配置
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml
  type-aliases-package: com.muyingmall.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    database-id: mysql
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: is_deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      db-type: mysql

# SpringDoc配置
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
    groups:
      enabled: true  # 启用分组功能
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    doc-expansion: none  # 默认不展开API列表
    disable-swagger-default-url: true
    display-request-duration: true  # 显示请求响应时间
    operations-sorter: alpha  # 按字母顺序排序
    tags-sorter: alpha  # 标签按字母排序
    default-models-expand-depth: 1  # 模型展开深度
    default-model-expand-depth: 1  # 默认模型展开深度
    display-operation-id: false  # 不显示操作ID
    show-extensions: true  # 显示扩展信息
    show-common-extensions: true  # 显示通用扩展
    try-it-out-enabled: true  # 启用"试用"功能
    filter: true  # 启用过滤功能
    syntax-highlight:
      activated: true  # 启用语法高亮
      theme: agate  # 语法高亮主题
    # 自定义CSS和JS
    custom-css-url: /swagger-ui/custom.css
    oauth:
      client-id: muying-mall-client
      client-secret: muying-mall-secret
      realm: muying-mall
      app-name: 母婴商城API
      scope-separator: ","
      additional-query-string-params:
        audience: muying-mall-api
  default-produces-media-type: application/json  # 默认的响应内容类型
  default-consumes-media-type: application/json  # 默认的请求内容类型
  paths-to-match: /**  # 扫描所有路径
  packages-to-scan: com.muyingmall.controller  # 要扫描的包
  # 全局参数设置
  group-configs:
    - group: default
      paths-to-match: /**
      packages-to-scan: com.muyingmall.controller
  cache:
    disabled: false  # 启用缓存以提高性能
  # 模型和属性命名策略
  model-and-view-allowed: false
  # 预加载模型
  pre-loading-enabled: true
  # 移除断言
  remove-broken-reference-definitions: false
  # 自动标签
  auto-tag-classes: true
  # 显示actuator端点
  show-actuator: true

# CORS配置
cors:
  allowed-origins: http://localhost:5173,http://localhost:3000,http://localhost:8081,http://localhost:4000
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,X-CSRF-Token
  allow-credentials: true
  max-age: 3600
    
# 支付宝配置 - 敏感信息已移至application-private.yml
alipay:
  # app-id已移至application-private.yml
  # private-key已移至application-private.yml
  # public-key已移至application-private.yml
  gateway-url: https://openapi-sandbox.dl.alipaydev.com/gateway.do  # 沙箱环境网关，正式环境需修改
  return-url: http://localhost:8080/api/payment/alipay/return #钱包充值成功后的跳转地址
  notify-url: http://localhost:8080/api/payment/alipay/notify #钱包充值异步回调地址
  refund-notify-url: http://localhost:8080/api/payment/alipay/refund/notify #退款异步回调地址
  # 订单支付回调地址（如果需要区分）
  wellet-return-url: http://localhost:8080/api/payment/alipay/return #订单支付成功后的跳转地址
  wellet-notify-url: http://localhost:8080/api/payment/alipay/notify #订单支付异步回调地址

# 微信支付配置 - 敏感信息已移至application-private.yml
wechat:
  pay:
    # app-id已移至application-private.yml
    # mch-id已移至application-private.yml
    # mch-serial-number已移至application-private.yml
    private-key-path: classpath:cert/apiclient_key.pem
    # api-v3-key已移至application-private.yml
    notify-url: http://localhost:8080/api/payment/wechat/notify
    
# 日志配置
logging:
  level:
    com.muyingmall: debug
    org.springframework.web: info
    org.springframework.security: DEBUG
    org.springframework.data.redis: info # 添加Redis日志级别配置
    org.springframework.data.elasticsearch: WARN # 降低Elasticsearch相关日志级别

# 前端应用地址 (用于支付回调重定向)
frontend:
  url: http://localhost:5173

# JWT配置 - 敏感信息已移至application-private.yml
jwt:
  # secret已移至application-private.yml
  expiration: 86400 # 单位：秒 (这里是24小时)

# 缓存配置
cache:
  # 全局缓存设置
  global:
    # 是否启用缓存
    enabled: true
    # 默认过期时间（秒）
    default-ttl: 3600
  # 二级缓存设置
  second-level:
    # 是否启用本地缓存作为二级缓存
    enabled: false
    # 本地缓存最大大小
    max-size: 1000
    # 本地缓存过期时间（秒）
    ttl: 60

# RabbitMQ自定义配置
rabbitmq:
  enabled: true  # 是否启用RabbitMQ功能
  fallback-to-sync: true  # RabbitMQ不可用时是否回退到同步处理
  # 错误处理配置
  error-handling:
    max-retry-attempts: 3  # 最大重试次数
    retry-interval: 1000  # 重试间隔（毫秒）
    dead-letter-enabled: true  # 是否启用死信队列
    alert-enabled: true  # 是否启用告警
  # 监控配置
  monitoring:
    enabled: true  # 是否启用监控
    health-check-interval: 30000  # 健康检查间隔（毫秒）
    metrics-collection-enabled: true  # 是否启用指标收集
    stats-retention-days: 7  # 统计数据保留天数