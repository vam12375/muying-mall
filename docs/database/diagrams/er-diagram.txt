# 母婴商城数据库ER图文本描述

## 图表结构描述

本文档描述了母婴商城系统的实体关系图(ER图)结构和布局，作为实际绘制图表的参考。

## 主要实体和关系

### 用户域

1. **用户主体**
   - **用户(user)**：系统的核心实体，关联多个子实体
   - **用户地址(user_address)**：与用户是一对多关系
   - **用户积分(user_points)**：与用户是一对一关系
   - **用户优惠券(user_coupon)**：与用户是一对多关系，也与优惠券是多对一关系
   - **用户消息(user_message)**：与用户是一对多关系

2. **关系描述**
   - user(1) → user_address(n)：一个用户可以有多个收货地址
   - user(1) → user_points(1)：一个用户有一个积分账户
   - user(1) → user_coupon(n)：一个用户可以有多张优惠券
   - user(1) → user_message(n)：一个用户可以有多条消息

### 商品域

1. **商品主体**
   - **商品(product)**：商品主体信息
   - **商品图片(product_image)**：与商品是一对多关系
   - **商品规格(product_specs)**：与商品是一对多关系
   - **品牌(brand)**：与商品是一对多关系
   - **分类(category)**：与商品是一对多关系，自身有递归关系

2. **关系描述**
   - product(1) → product_image(n)：一个商品可以有多张图片
   - product(1) → product_specs(n)：一个商品可以有多种规格配置
   - brand(1) → product(n)：一个品牌下可以有多个商品
   - category(1) → product(n)：一个分类下可以有多个商品
   - category(1) → category(n)：一个父分类可以有多个子分类（自关联）

### 订单域

1. **订单主体**
   - **订单(order)**：订单主体信息
   - **订单商品(order_product)**：与订单是一对多关系，也与商品是多对一关系
   - **支付记录(payment)**：与订单是一对多关系
   - **物流信息(logistics)**：与订单是一对一关系
   - **退款(refund)**：与订单是一对多关系

2. **关系描述**
   - order(1) → order_product(n)：一个订单包含多个商品
   - order(1) → payment(n)：一个订单可能有多条支付记录(如部分支付、多次尝试等)
   - order(1) → logistics(1)：一个订单对应一条物流信息
   - order(1) → refund(n)：一个订单可能有多条退款记录(如多次部分退款)
   - user(1) → order(n)：一个用户可以有多个订单

### 购物车域

1. **购物车主体**
   - **购物车(cart)**：与用户是一对多关系，与商品是多对一关系

2. **关系描述**
   - user(1) → cart(n)：一个用户的购物车可以有多个商品
   - product(1) → cart(n)：一个商品可以在多个用户的购物车中

### 促销域

1. **促销主体**
   - **优惠券(coupon)**：优惠券基本信息
   - **优惠券规则(coupon_rule)**：与优惠券是一对多关系
   - **优惠券批次(coupon_batch)**：与优惠券规则是多对一关系
   - **积分规则(points_rule)**：积分获取和消费规则
   - **积分商品(points_product)**：可用积分兑换的商品
   - **积分兑换记录(points_exchange)**：与用户是多对一关系
   - **积分历史(points_history)**：与用户是多对一关系

2. **关系描述**
   - coupon_rule(1) → coupon(n)：一个规则可以生成多张优惠券
   - coupon_rule(1) → coupon_batch(n)：一个规则可以有多个发放批次
   - user(1) → points_exchange(n)：一个用户可以有多条积分兑换记录
   - user(1) → points_history(n)：一个用户可以有多条积分变更历史

### 评价域

1. **评价主体**
   - **评价(comment)**：与用户、商品和订单都有多对一关系

2. **关系描述**
   - user(1) → comment(n)：一个用户可以发表多条评价
   - product(1) → comment(n)：一个商品可以有多条评价
   - order(1) → comment(n)：一个订单可以关联多条评价(多个商品)

### 物流域

1. **物流主体**
   - **物流公司(logistics_company)**：物流公司信息
   - **物流信息(logistics)**：与订单是一对一关系，与物流公司是多对一关系
   - **物流轨迹(logistics_track)**：与物流信息是一对多关系

2. **关系描述**
   - logistics_company(1) → logistics(n)：一个物流公司可以有多条物流信息
   - logistics(1) → logistics_track(n)：一条物流信息可以有多条物流轨迹记录

## 主键与外键关系

### 主键

- user: user_id (PK)
- user_address: address_id (PK)
- product: product_id (PK)
- order: order_id (PK)
- brand: brand_id (PK)
- category: category_id (PK)
- ...（其他表的主键）

### 外键

- user_address: user_id (FK -> user.user_id)
- user_points: user_id (FK -> user.user_id)
- order: user_id (FK -> user.user_id)
- order_product: order_id (FK -> order.order_id)
- order_product: product_id (FK -> product.product_id)
- product: brand_id (FK -> brand.brand_id)
- product: category_id (FK -> category.category_id)
- ...（其他表的外键关系）

## 多对多关系

1. **用户与商品**：通过购物车(cart)表实现
2. **用户与优惠券**：通过用户优惠券(user_coupon)表实现
3. **订单与商品**：通过订单商品(order_product)表实现

## 图表表示建议

1. **实体表示**：使用矩形表示实体，内部列出关键属性
2. **关系表示**：使用连接线表示实体间关系，标注关系类型(1:1, 1:n, n:m)
3. **主键标识**：使用下划线标示主键字段
4. **外键标识**：使用箭头指向引用的表
5. **分组**：按业务域对实体进行分组，使用不同颜色区分

## 布局建议

1. 将用户实体置于左上方，作为整个系统的起点
2. 将商品实体置于右上方
3. 将订单相关实体置于中央位置
4. 将购物车置于用户和商品之间
5. 促销相关实体置于下方

## 图例建议

添加图例说明以下元素：
1. 实体表示方式
2. 一对一关系线型
3. 一对多关系线型
4. 多对多关系线型
5. 自引用关系表示
6. 不同业务域的颜色编码

## 绘图工具建议

可使用以下工具绘制ER图：
1. MySQL Workbench：可直接从数据库反向生成ER图
2. Lucidchart：在线绘图工具，提供专业的ER图模板
3. draw.io：免费开源的绘图工具
4. Visual Paradigm：专业UML和ER图设计工具 